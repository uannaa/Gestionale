/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frame;

import Class.UIUtils;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author paolo
 */
public class EventFrame extends javax.swing.JFrame {
    
    public JPanel Pan;
    /**
     * Creates new form EventFrame
     */
    public EventFrame( ) throws FileNotFoundException {
        
        initComponents();
        jLabel7.setVisible(false);
        try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        UIUtils.styleAllComponents(this.getContentPane());
        load(31, gg, false);
        load(12, mm, false);
        load(0, yy, true);
        load(12, jComboBox1, false);
        load(59, jComboBox2, false);
        loadCategorie(cat);
        gg.setPreferredSize(new Dimension(70, 36));
        mm.setPreferredSize(new Dimension(70, 36));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        dateCheck();

        
    }

     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        NEvento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        gg = new javax.swing.JComboBox<>();
        yy = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Descriz = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        cat = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        mm = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setMaximumSize(new java.awt.Dimension(436, 540));
        setMinimumSize(new java.awt.Dimension(436, 540));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(34, 40, 49));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ora :");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nome :");

        NEvento.setToolTipText("Inserisci il nome dell'evento");
        NEvento.setActionCommand("<Not Set>");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Descrizione :");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Data :");

        gg.setForeground(new java.awt.Color(255, 255, 255));

        yy.setForeground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        Descriz.setColumns(20);
        Descriz.setRows(5);
        Descriz.setToolTipText("Inserisci una descrizione all'evento");
        jScrollPane1.setViewportView(Descriz);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("CREA EVENTO");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Categoria :");

        jButton1.setBackground(new java.awt.Color(238, 238, 238));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(34, 40, 49));
        jButton1.setText("CREA");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToggleButton1.setBackground(new java.awt.Color(238, 238, 238));
        jToggleButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jToggleButton1.setForeground(new java.awt.Color(34, 40, 49));
        jToggleButton1.setText("P.M.");
        jToggleButton1.setToolTipText("Clicca su questo tasto se l'evento e' di pomeriggio");
        jToggleButton1.setFocusPainted(false);
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });

        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));

        jComboBox2.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00" }));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("DEVI COMPLETARE TUTTI I CAMPI CORRETTAMENTE!");

        jSeparator1.setForeground(new java.awt.Color(238, 238, 238));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                            .addComponent(jLabel7))
                        .addGap(38, 38, 38))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(gg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NEvento, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cat, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Creare tutto l'evento.
        if (NEvento.getText().equals("")) {
            jLabel7.setVisible(true);
            return;
        }
        
        try {
            saveEvent();
            
        } catch (IOException ex) {
            Logger.getLogger(EventFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    
    private boolean isBisestile(String anno) {

        boolean isBisestile = false;
        
        int annonum = Integer.parseInt(anno);
 
        if ((annonum - 1904) % 4 == 0)  {

            isBisestile = true;

        } else {

            isBisestile = false;

        }

        return isBisestile;

    }
    
    private void dateCheck(){

        mm.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String selectedMonth = (String) mm.getSelectedItem();
                String selectedDay = (String) gg.getSelectedItem();

                int mese = Integer.parseInt(selectedMonth);
                int oldDay = Integer.parseInt(selectedDay);
                
                boolean bisestile = isBisestile((String) yy.getSelectedItem());
                int giorniMax;

                if (mese == 2) {
                    giorniMax = bisestile ? 29 : 28;
                } else if (mese == 4 || mese == 6 || mese == 9 || mese == 11) {
                    giorniMax = 30;
                } else {
                    giorniMax = 31;
                }
                
                gg.removeAllItems();
                load(giorniMax, gg, false);

                if (oldDay <= giorniMax) {
                    gg.setSelectedItem(String.valueOf(oldDay));
                } else {
                    gg.setSelectedItem(String.valueOf(giorniMax));
                }
            }
        });


        
        yy.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
                String selectedYear = (String) yy.getSelectedItem();
                String selectedMonth = (String) mm.getSelectedItem();
                String selectedDay = (String) gg.getSelectedItem();
                int giornimax = 0;
                boolean t = false;
                if (selectedMonth.equals("2") && isBisestile(selectedYear)) {
                    giornimax = 29;
                    t = true;
                } else if (selectedMonth.equals("2") && !isBisestile(selectedYear)){
                    giornimax = 28;
                    t = true;
                }
                
                if (t) {
                    gg.removeAllItems();
                    load(giornimax, gg, false);
                }
                
               int oldDay = Integer.parseInt(selectedDay); 
                if (oldDay <= giornimax) { 
                    gg.setSelectedItem(String.valueOf(oldDay)); 
                } else { 
                        gg.setSelectedItem(String.valueOf(giornimax)); 
                } 
                 
            }
        });




    }
    
    private void saveEvent() throws IOException {
        
        String nome = NEvento.getText();
        String descrizione = "$#=" + Descriz.getText() + "$#=";
        String data = (String) gg.getSelectedItem() + "-" + (String) mm.getSelectedItem() + "-" + (String) yy.getSelectedItem();
        String ora = (String) jComboBox1.getSelectedItem() + ":" + (String) jComboBox2.getSelectedItem();
        String categoria = (String) cat.getSelectedItem();
        
        String path2 = System.getProperty("user.home") + File.separator + "Gestionale";
        String pathFile2 = path2 + File.separator + "Eventi.csv";
       
        
        if (jToggleButton1.isSelected()) {
            Integer orario = Integer.parseInt((String) jComboBox1.getSelectedItem());
            orario += 12;
            String orax[] = ora.split(":");
            ora = String.valueOf(orario) + ":" + orax[1];
        }
        
        try (FileWriter writer  = new FileWriter(pathFile2, true)) {
            writer.write(nome + "," + descrizione + "," + data + "," + ora + "," + categoria + "\n");
        } catch (IOException e) {
            e.printStackTrace();
        }
        
        dispose();
        System.out.println("Evento creato!");
        
    }
    
    public int i = 1;
    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked
           
        jToggleButton1.setFocusPainted(false);
        
        if(i == 1){
            
            jToggleButton1.setBackground(new Color(34,40,49));
            jToggleButton1.setForeground(new Color(238,238,238));
            i = 0;
        }else{
            
            jToggleButton1.setBackground(new Color(238,238,238));
            jToggleButton1.setForeground(new Color(34,40,49));
            
            i = 1;
        }
    }//GEN-LAST:event_jToggleButton1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoriaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoriaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoriaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoriaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EventFrame().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(EventFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
 
    
    private void load(int num, JComboBox combobox, boolean b) {
        
        if (!b) {
            for (int i = 0; i < num; i++) {
                String nm = String.valueOf(i+1);
                if ((i+1) < 10) {
                    nm = "0" + nm;
                }
                combobox.addItem(nm);
            }
            return;
        }
        
        LocalDate d = LocalDate.now();
        String dS = String.valueOf(d);
        String year = "";
        for (int i = 0; i < 4; i++) {
            year += dS.charAt(i);
        }
        int yearint = Integer.valueOf(year);
        for (int i = yearint; i < (yearint + 6); i++) {
            String nm = String.valueOf(i);
            combobox.addItem(nm);
        }
        
    }
    private void loadCategorie(JComboBox c) throws FileNotFoundException {
        String path2 = System.getProperty("user.home") + File.separator + "Gestionale";
        String pathFile1 = path2 + File.separator + "Categorie.csv";
        
        File file = new File(pathFile1);
        try (Scanner scanner = new Scanner(file)) {
            
            while (scanner.hasNextLine()) {
                String linea = scanner.nextLine();
                String categoria[] = linea.split(",");
                c.addItem(categoria[0]);
            }
            
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Descriz;
    private javax.swing.JTextField NEvento;
    private javax.swing.JComboBox<String> cat;
    private javax.swing.JComboBox<String> gg;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox<String> mm;
    private javax.swing.JComboBox<String> yy;
    // End of variables declaration//GEN-END:variables
}
